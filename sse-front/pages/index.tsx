import Head from "next/head";
import { useEffect, useState } from "react";
import styles from "../styles/Home.module.css";

interface Check {
  result: string;
  title: string;
  message?: string;
}

interface CheckResponse {
  checks: Check[];
}

export default function Home() {
  const [checks, setChecks] = useState<Check[]>([]);

  useEffect(() => {
    const eventSource = new EventSource("http://127.0.0.1:8080/check");

    eventSource.onmessage = (event) => {
      const eventData = JSON.parse(event.data) as CheckResponse;

      setChecks(eventData.checks);
    };

    eventSource.onerror = (event) => {
      console.log("Error happened");
      console.log(event);

      eventSource.close();
    };

    return () => eventSource.close();
  }, []);

  return (
    <div className={styles.container}>
      <Head>
        <title>SSE Showcase</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          Welcome to{" "}
          <a href="https://developer.mozilla.or SSE Showcase!</h1>g/en-US/docs/Web/API/Server-sent_events/Using_server-sent_events">
            SSE
          </a>{" "}
          Showcase!
        </h1>

        <p className={styles.description}>
          Here are the checks served via{" "}
          <a href="https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events/Using_server-sent_events">
            {" "}
            Server-Sent Events
          </a>
          :
        </p>

        <div className={styles.grid}>
          {checks.map((check) => (
            <div key={check.title} className={styles.card}>
              <h2>{check.title}</h2>
              <p>
                <ResultIcon result={check.result} />{" "}
                {check.message || "Loading..."}
              </p>
            </div>
          ))}
        </div>
      </main>

      <footer className={styles.footer}>Thanks for trying it out.</footer>
    </div>
  );
}

const ResultIcon = ({ result }: { result: string }) => {
  switch (result) {
    case "success":
      return <span>‚úÖ</span>;
    case "warning":
      return <span style={{ color: "orange" }}>‚ö†Ô∏è</span>;
    case "error":
      return <span>‚ùå</span>;
    case "unknown":
      return <span>üò∂</span>;
    default:
      return <span className={styles.spin}>‚ôªÔ∏è</span>;
  }
};
